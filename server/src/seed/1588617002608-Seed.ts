import { MigrationInterface, QueryRunner, getRepository } from "typeorm";
import { Status } from "../entity/Status";
import { Cause } from "../entity/Cause";
import { Position } from "../entity/Position";

export class Seed1588617002608 implements MigrationInterface {
  public async up(queryRunner: QueryRunner): Promise<any> {
    await getRepository(Status, "seed").save([
      { label: "В офисе" },
      { label: "В декрете" },
      { label: "Удаленная работа" },
      { label: "В армии" },
    ]);
    await getRepository(Cause, "seed").save([
      { label: "Выход на пенсию" },
      { label: "По состоянию здоровью" },
      { label: "Релокация" },
      { label: "Высокая зарплата" },
      { label: "Интересные задачи" },
      { label: "Возможность развития" },
      { label: "Увольнение" },
      { label: "Смена деятельности" },
      { label: "Коллектив" },
    ]);
    await getRepository(Position, "seed").save([
      { label: "Генеральный директор" },
      { label: "Директор по развитию" },
      { label: "Юрист" },
      { label: "Заместитель генерального директора" },
      { label: "Ассистент генерального директора" },
      { label: "Директор по производству и технологиям" },
      { label: "Заместитель директора ПиТ по методической работе" },
      { label: "Заместитель директора ПиТ по операционной деятельности" },
      { label: "Главный технический лидер" },
      { label: "Руководитель коммерческой службы" },
      { label: "Руководитель отдела продаж коммерческой службы" },
      { label: "Менеджер отдела продаж коммерческой службы" },
      { label: "Младший менеджер отдела продаж коммерческой службы" },
      { label: "Руководитель клиентского отдела коммерческой службы" },
      { label: "Менеджер по работе с клиентами" },
      { label: "Руководитель отдела маркетинга коммерческой службы" },
      { label: "Менеджер по работе с партнерами" },
      { label: "Специалист по маркетингу" },
      { label: "Младший специалист по маркетингу" },
      { label: "Главный бухгалтер" },
      { label: "Бухгалтер" },
      {
        label:
          "Руководитель отдела кадрового учета, делопроизводства и охраны труда службы персонала",
      },
      { label: "Специалист по кадрам" },
      { label: "Руководитель службы персонала" },
      { label: "Менеджер по персоналу" },
      { label: "Младший менеджер Центр обучения" },
      { label: "Руководитель Центр обучения" },
      { label: "Офис-менеджер" },
      { label: "Мастер чистоты" },
      { label: "Руководитель отдела дизайна производственного департамента" },
      { label: "Ведущий дизайнер" },
      { label: "Дизайнер" },
      { label: "Младший дизайнер" },
      {
        label:
          "Руководитель отдела тестирования производственного департамента",
      },
      { label: "Инженер – тестировщик программного обеспечения" },
      {
        label:
          "Руководитель отдела администрирования и обслуживания информационных ресурсов производственного департамента",
      },
      { label: "Системный администратор" },
      {
        label:
          "Руководитель отдела перспективных разработок производственного департамента",
      },
      { label: "Младший программист" },
      { label: "Программист" },
      { label: "Инженер-программист" },
      { label: "Ведущий инженер–программист" },
      { label: "Менеджер проектов" },
    ]);
  }

  public async down(queryRunner: QueryRunner): Promise<any> {}
}
